# Based on: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# Note: to skip both travis and github actions, add both [skip ci/travis] and [skip actions] to your commit message

name: Test and deploy
on: [push]
env:
  ACTIONS_PYTHON_VERSION: 3.6
  ACTIONS_NODE_VERSION: 12
  # Currently available versions (2021-01-04) are:
  #   - ubuntu-16.04
  #   - ubuntu-18.04 (@ubuntu-latest)
  #   - ubuntu-20.04 (soon-to-be @ubuntu-latest)
  ACTIONS_OS_VERSION: ubuntu-16.04

jobs:
  should-run-tests:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip actions]')"
    runs-on: ubuntu-20.04
    steps:
      - run: echo 'Running for ${{ github.ref }}!'

  unit-test:
    needs: [should-run-tests]
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2
    - name: üêç Set up Python ${{ env.ACTIONS_PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.ACTIONS_PYTHON_VERSION }}
    - name: üñ• Install system dependencies
      run: sudo apt-get install -y hfst
    - name: ‚ò§ Install pipenv
      run: python3 -m pip install pipenv
    - name: üì• Install dependencies
      run: |
        pipenv install --dev
        # Install pytest plugin to show failed tests on the web
        pipenv run pip install pytest-github-actions-annotate-failures
    - name: ü©∫ Run unit tests
      env:
        DEBUG: "True"
        USE_TEST_DB: "True"
      run: pipenv run test -v --cov=CreeDictionary

  integration-test:
    needs: [should-run-tests]

    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2
    - name: üêç Set up Python ${{ env.ACTIONS_PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.ACTIONS_PYTHON_VERSION }}
    - name: Setup Node ${{ env.ACTIONS_NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.ACTIONS_NODE_VERSION }}
    - name: üñ• Install system dependencies
      run: sudo apt-get install -y hfst libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    - name: ‚ò§ Install pipenv
      run: python3 -m pip install pipenv
    - name: üì• Install Python dependencies
      run: |
        pipenv install --dev
    - name: üì• Install Node dependencies
      run: npm ci
    - name: üõë Halt tests if Cypress tests are marked as '.only'
      run: npm run stop-only
    - name: üèó Build frontend
      run: npm run build
    - name: üå≤ Run Cypress tests
      env:
        DEBUG: "True"
        USE_TEST_DB: "True"
      run: npm run test:ci

# This syncs up API/schema.py to our @altlab/types package
# If there is an update to the type output (index.ts), but the version number is untouched. This
# will fail. Because developer needs to choose which version to bump.
  type-package-check:
    needs: [should-run-tests]

    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: üêç Set up Python 3.9
      uses: actions/setup-python@v2
      with: # python-typing-to-typescript requires python 3.9
        python-version: 3.9

    - name: Setup Node 14
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: "‚ùì Generate current types and check if types changed"
      run: |
        # get published version and the conversion tool we are using
        npm install -g @altlab/types python-typing-to-typescript@^1.1

        # convert our current schema.py to index.ts
        pttts CreeDictionary/API/schema.py types/index.ts

        # assert version change if the current types are different
        libexec/check-npm-types-package-and-version-bump ./types $(npm root -g)/@altlab/types

    - name: "üìñ Generate README" # it's just copy-pasting our index.ts file
      run: |
        echo "\`\`\`typescript" >> types/README.md
        cat types/index.ts >> types/README.md
        echo "\`\`\`" >> types/README.md

    - name: "üìÅ Publish new NPM package"
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.TYPES_NPM_PACKAGE_PUBLISH_TOKEN }}
        package: ./types/package.json
        check-version: true # won't run if version is not bumped

  deploy-to-sapir:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    needs:
    - unit-test
    - integration-test
    # type '[skip deploy]' in a commit message and the app will be tested, but not deployed
    steps:
    - uses: actions/checkout@v2
    - env:
        SAPIR_REDEPLOY_KEY: ${{ secrets.SAPIR_REDEPLOY_KEY }}
      run: |
        curl --verbose --fail -dsecret=$SAPIR_REDEPLOY_KEY https://sapir.artsrn.ualberta.ca/redeploy/cree-dictionary
